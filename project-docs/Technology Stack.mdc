Technology Stack

*   **Frontend:**
    *   **Framework:** Angular (latest stable version, e.g., v17+)
    *   **UI Components:** Angular Material (v17+ for Material 3)
    *   **Styling:** TailwindCSS (latest version)
    *   **State Management (Optional):** NgRx or Angular Signals (if complexity grows)
    *   **Code Editor:** Monaco Editor (for displaying/editing generated code)
    *   **Language:** TypeScript
*   **Backend:**
    *   **Language/Framework:** Node.js with Express.js or NestJS (Good TypeScript support, async handling, large ecosystem) OR Python with FastAPI or Flask (Excellent AI/ML libraries, good async)
    *   **AI Integration:**
        *   OpenAI API Client Library (`openai` npm package or Python equivalent)
        *   Anthropic API Client Library (`@anthropic-ai/sdk` npm package or Python equivalent)
    *   **Figma Integration:**
        *   Official Figma API
        *   Node library like `figma-js` or Python equivalent.
*   **AI Model:**
    *   GPT-4 Vision (High capability, higher cost)
    *   Claude 3 Opus/Sonnet/Haiku (Strong vision capabilities, potentially better cost/performance balance - Sonnet/Haiku)
*   **Database (Optional):**
    *   PostgreSQL or MongoDB (If user accounts, saving generated components, usage tracking are needed)
*   **Deployment:**
    *   **Frontend:** Vercel, Netlify, AWS S3/CloudFront, Azure Static Web Apps
    *   **Backend:** Vercel Serverless Functions, Netlify Functions, AWS Lambda, Google Cloud Functions, Azure Functions, or traditional PaaS (Heroku, Render) / IaaS (EC2, VMs).
