/* Angular Material v19 custom theme */
@use '@angular/material' as mat;

// Include the common styles for Angular Material
@include mat.core();

// Use classic Material Design palettes for a reliable setup
$indigo-palette: (
  50: #e8eaf6,
  100: #c5cae9,
  200: #9fa8da,
  300: #7986cb,
  400: #5c6bc0,
  500: #3f51b5,
  600: #3949ab,
  700: #303f9f,
  800: #283593,
  900: #1a237e,
  contrast: (
    50: rgba(0, 0, 0, 0.87),
    100: rgba(0, 0, 0, 0.87),
    200: rgba(0, 0, 0, 0.87),
    300: rgba(0, 0, 0, 0.87),
    400: white,
    500: white,
    600: white,
    700: white,
    800: white,
    900: white,
  )
);

$pink-palette: (
  50: #fce4ec,
  100: #f8bbd0,
  200: #f48fb1,
  300: #f06292,
  400: #ec407a,
  500: #e91e63,
  600: #d81b60,
  700: #c2185b,
  800: #ad1457,
  900: #880e4f,
  A100: #ff80ab,
  A200: #ff4081,
  A400: #f50057,
  A700: #c51162,
  contrast: (
    50: rgba(0, 0, 0, 0.87),
    100: rgba(0, 0, 0, 0.87),
    200: rgba(0, 0, 0, 0.87),
    300: rgba(0, 0, 0, 0.87),
    400: rgba(0, 0, 0, 0.87),
    500: white,
    600: white,
    700: white,
    800: white,
    900: white,
    A100: rgba(0, 0, 0, 0.87),
    A200: white,
    A400: white,
    A700: white,
  )
);

$red-palette: (
  50: #ffebee,
  100: #ffcdd2,
  200: #ef9a9a,
  300: #e57373,
  400: #ef5350,
  500: #f44336,
  600: #e53935,
  700: #d32f2f,
  800: #c62828,
  900: #b71c1c,
  contrast: (
    50: rgba(0, 0, 0, 0.87),
    100: rgba(0, 0, 0, 0.87),
    200: rgba(0, 0, 0, 0.87),
    300: rgba(0, 0, 0, 0.87),
    400: rgba(0, 0, 0, 0.87),
    500: white,
    600: white,
    700: white,
    800: white,
    900: white,
  )
);

// Define CSS variables for both Angular Material and Tailwind CSS
:root {
  // Primary palette
  --primary-50: #{map-get($indigo-palette, 50)};
  --primary-100: #{map-get($indigo-palette, 100)};
  --primary-200: #{map-get($indigo-palette, 200)};
  --primary-300: #{map-get($indigo-palette, 300)};
  --primary-400: #{map-get($indigo-palette, 400)};
  --primary-500: #{map-get($indigo-palette, 500)};
  --primary-600: #{map-get($indigo-palette, 600)};
  --primary-700: #{map-get($indigo-palette, 700)};
  --primary-800: #{map-get($indigo-palette, 800)};
  --primary-900: #{map-get($indigo-palette, 900)};
  --primary-color: var(--primary-500);
  
  // Accent palette
  --accent-50: #{map-get($pink-palette, 50)};
  --accent-100: #{map-get($pink-palette, 100)};
  --accent-200: #{map-get($pink-palette, 200)};
  --accent-300: #{map-get($pink-palette, 300)};
  --accent-400: #{map-get($pink-palette, 400)};
  --accent-500: #{map-get($pink-palette, 500)};
  --accent-600: #{map-get($pink-palette, 600)};
  --accent-700: #{map-get($pink-palette, 700)};
  --accent-800: #{map-get($pink-palette, 800)};
  --accent-900: #{map-get($pink-palette, 900)};
  --accent-A100: #{map-get($pink-palette, A100)};
  --accent-A200: #{map-get($pink-palette, A200)};
  --accent-A400: #{map-get($pink-palette, A400)};
  --accent-A700: #{map-get($pink-palette, A700)};
  --accent-color: var(--accent-A200);
  
  // Warn palette
  --warn-50: #{map-get($red-palette, 50)};
  --warn-100: #{map-get($red-palette, 100)};
  --warn-200: #{map-get($red-palette, 200)};
  --warn-300: #{map-get($red-palette, 300)};
  --warn-400: #{map-get($red-palette, 400)};
  --warn-500: #{map-get($red-palette, 500)};
  --warn-600: #{map-get($red-palette, 600)};
  --warn-700: #{map-get($red-palette, 700)};
  --warn-800: #{map-get($red-palette, 800)};
  --warn-900: #{map-get($red-palette, 900)};
  --warn-color: var(--warn-500);
  
  // Design tokens for layout
  --border-radius-sm: 0.125rem;
  --border-radius: 0.25rem;
  --border-radius-md: 0.375rem;
  --border-radius-lg: 0.5rem;
  --border-radius-xl: 0.75rem;
  --border-radius-2xl: 1rem;
  --border-radius-3xl: 1.5rem;
  
  // Typography
  --font-family-sans: 'Roboto', 'Helvetica Neue', sans-serif;
  --font-family-mono: 'Roboto Mono', monospace;
  
  // Shadows for consistent elevation
  --shadow-sm: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
  --shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);
  --shadow-md: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
  --shadow-lg: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
  --shadow-xl: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
  --shadow-inner: inset 0 2px 4px 0 rgba(0, 0, 0, 0.06);
  
  // Transitions
  --transition-speed: 0.2s;
}

// Material component specific styles
.mat-mdc-button.mat-primary {
  --mdc-text-button-label-text-color: var(--primary-color);
}

.mat-mdc-raised-button.mat-primary {
  --mdc-filled-button-container-color: var(--primary-color);
  --mdc-filled-button-label-text-color: white;
}

.mat-mdc-form-field.mat-focused .mat-mdc-form-field-ripple {
  background-color: var(--primary-color);
}

.mat-mdc-form-field.mat-focused .mat-mdc-form-field-label {
  color: var(--primary-color);
}

.mat-mdc-checkbox.mat-accent .mdc-checkbox__native-control:checked ~ .mdc-checkbox__background {
  background-color: var(--accent-color);
  border-color: var(--accent-color);
}

.mat-mdc-tab-group.mat-primary .mat-mdc-tab-header {
  --mdc-tab-indicator-active-indicator-color: var(--primary-color);
}

.mat-mdc-tab-group.mat-primary .mat-mdc-tab-header-item.mat-mdc-tab--active {
  color: var(--primary-color);
}

// Dark mode overrides (for Tailwind class-based dark mode)
.dark-theme {
  // Adjust primary colors in dark mode if needed
  --primary-color: var(--primary-300);
  --accent-color: var(--accent-A100);
  
  // Update component-specific styles for dark mode
  .mat-mdc-button.mat-primary {
    --mdc-text-button-label-text-color: var(--primary-300);
  }
  
  .mat-mdc-raised-button.mat-primary {
    --mdc-filled-button-container-color: var(--primary-300);
  }
}

// Generate these colors in the screenshot-to-code process
// Support for dynamically extracted colors from screenshots
.screenshot-colors {
  --extracted-primary: inherit;
  --extracted-secondary: inherit;
  --extracted-background: inherit;
  --extracted-text: inherit;
  --extracted-accent: inherit;
} 